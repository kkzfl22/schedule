<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--批次的日志批次状态表(dc_batch_log)数据库操作-->
<mapper namespace="com.liujun.schedule.infrastructure.repository.task.mapper.DcBatchLogMapper">
    <resultMap type="com.liujun.schedule.infrastructure.repository.task.po.DcBatchLogPO" id="dcBatchLogResultMap">
        <!--日志ID-->
        <id property="logId" column="log_id"/>
        <!--日志ID-->
        <result property="logId" column="log_id"/>
        <!--批次号-->
        <result property="batchId" column="batch_id"/>
        <!--任务的名称-->
        <result property="batchName" column="batch_name"/>
        <!--批次中任务最大并行度，防止一个批次占用过多的线程-->
        <result property="batchConcurrent" column="batch_concurrent"/>
        <!--任务的状态:, 1:成功, 2:任务执行中, 0:初始化状态 -1：失败-->
        <result property="batchRunStatus" column="batch_run_status"/>
        <!--任务日志，成功为空，失败时记录下失败信息-->
        <result property="batchMsg" column="batch_msg"/>
        <!--批次的开始时间-->
        <result property="batchStartTime" column="batch_start_time"/>
        <!--批次的结束时间-->
        <result property="batchFinishTime" column="batch_finish_time"/>
        <!--每个批次执行时的标识-->
        <result property="taskRuntimeFlag" column="task_runtime_flag"/>
    </resultMap>
    <!--批次的日志批次状态表(dc_batch_log)单个添加-->
    <insert id="insert" parameterType="com.liujun.schedule.infrastructure.repository.task.po.DcBatchLogPO">
        insert into dc_batch_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <!--日志ID-->
            log_id,
            <!--批次号-->
            batch_id,
            <!--任务的名称-->
            batch_name,
            <!--批次中任务最大并行度，防止一个批次占用过多的线程-->
            batch_concurrent,
            <!--任务的状态:, 1:成功, 2:任务执行中, 0:初始化状态 -1：失败-->
            batch_run_status,
            <!--任务日志，成功为空，失败时记录下失败信息-->
            batch_msg,
            <!--批次的开始时间-->
            batch_start_time,
            <!--批次的结束时间-->
            batch_finish_time,
            <!--每个批次执行时的标识-->
            task_runtime_flag,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <!--日志ID-->
            #{logId,jdbcType=BIGINT},
            <!--批次号-->
            #{batchId,jdbcType=BIGINT},
            <!--任务的名称-->
            #{batchName,jdbcType=VARCHAR},
            <!--批次中任务最大并行度，防止一个批次占用过多的线程-->
            #{batchConcurrent,jdbcType=INTEGER},
            <!--任务的状态:, 1:成功, 2:任务执行中, 0:初始化状态 -1：失败-->
            #{batchRunStatus,jdbcType=INTEGER},
            <!--任务日志，成功为空，失败时记录下失败信息-->
            #{batchMsg,jdbcType=VARCHAR},
            <!--批次的开始时间-->
            #{batchStartTime,jdbcType=BIGINT},
            <!--批次的结束时间-->
            #{batchFinishTime,jdbcType=BIGINT},
            <!--每个批次执行时的标识-->
            #{taskRuntimeFlag,jdbcType=BIGINT},
        </trim>
    </insert>


    <!--批次的日志批次状态表(dc_batch_log)批量添加-->
    <insert id="insertList" parameterType="com.liujun.schedule.infrastructure.repository.task.po.DcBatchLogPO">
        insert into dc_batch_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <!--日志ID-->
            log_id,
            <!--批次号-->
            batch_id,
            <!--任务的名称-->
            batch_name,
            <!--批次中任务最大并行度，防止一个批次占用过多的线程-->
            batch_concurrent,
            <!--任务的状态:, 1:成功, 2:任务执行中, 0:初始化状态 -1：失败-->
            batch_run_status,
            <!--任务日志，成功为空，失败时记录下失败信息-->
            batch_msg,
            <!--批次的开始时间-->
            batch_start_time,
            <!--批次的结束时间-->
            batch_finish_time,
            <!--每个批次执行时的标识-->
            task_runtime_flag,
        </trim>
        values
        <foreach collection="list" item="item" open="(" separator="),(" close=")" index="index">
            <!--日志ID-->
            #{item.logId,jdbcType=BIGINT},
            <!--批次号-->
            #{item.batchId,jdbcType=BIGINT},
            <!--任务的名称-->
            #{item.batchName,jdbcType=VARCHAR},
            <!--批次中任务最大并行度，防止一个批次占用过多的线程-->
            #{item.batchConcurrent,jdbcType=INTEGER},
            <!--任务的状态:, 1:成功, 2:任务执行中, 0:初始化状态 -1：失败-->
            #{item.batchRunStatus,jdbcType=INTEGER},
            <!--任务日志，成功为空，失败时记录下失败信息-->
            #{item.batchMsg,jdbcType=VARCHAR},
            <!--批次的开始时间-->
            #{item.batchStartTime,jdbcType=BIGINT},
            <!--批次的结束时间-->
            #{item.batchFinishTime,jdbcType=BIGINT},
            <!--每个批次执行时的标识-->
            #{item.taskRuntimeFlag,jdbcType=BIGINT}
        </foreach>
    </insert>


    <!--批次的日志批次状态表(dc_batch_log)修改状态方法-->
    <update id="updateStatus" parameterType="com.liujun.schedule.infrastructure.repository.task.po.DcBatchLogPO">
        update dc_batch_log
        <set>
            <trim suffixOverrides=",">
                batch_run_status = #{batchRunStatus,jdbcType=INTEGER},
                batch_finish_time = #{batchFinishTime,jdbcType=BIGINT},
                batch_msg = #{batchMsg,jdbcType=VARCHAR},
            </trim>
        </set>
        <where>
            batch_id = #{batchId,jdbcType=BIGINT}
            and task_runtime_flag = #{taskRuntimeFlag,jdbcType=BIGINT}
            and batch_run_status = #{beforeBatchRunStatus,jdbcType=BIGINT}
        </where>
    </update>

    <!--批次的日志批次状态表(dc_batch_log)批量删除-->
    <delete id="deleteByIds" parameterType="com.liujun.schedule.infrastructure.repository.task.po.DcBatchLogPO">
        delete from dc_batch_log
        <where>
            <!--日志ID-->
            log_id = #{logId,jdbcType=BIGINT}
        </where>
    </delete>

    <!--批次的日志批次状态表(dc_batch_log)分页查询-->
    <select id="queryPage" parameterType="com.liujun.schedule.infrastructure.repository.task.po.DcBatchLogPO"
            resultMap="dcBatchLogResultMap">
        select 
        log_id,
        batch_id,
        batch_name,
        batch_concurrent,
        batch_run_status,
        batch_msg,
        batch_start_time,
        batch_finish_time,
        task_runtime_flag
         from 
        dc_batch_log

    </select>

    <!--批次的日志批次状态表(dc_batch_log)按id查询详细-->
    <select id="detail" parameterType="com.liujun.schedule.infrastructure.repository.task.po.DcBatchLogPO"
            resultMap="dcBatchLogResultMap">
        select
        log_id,
        batch_id,
        batch_name,
        batch_concurrent,
        batch_run_status,
        batch_msg,
        batch_start_time,
        batch_finish_time,
        task_runtime_flag
        from
        dc_batch_log
        <where>
            <!--日志ID-->
            log_id = #{logId,jdbcType=BIGINT}
        </where>
    </select>

</mapper>